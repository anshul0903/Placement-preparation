#include <iostream>
#include <queue>
using namespace std;

struct node
{
    int data;
    struct node *left;
    struct node *right;
};
int count=0;
struct node *tree=NULL;
void insert(int n)
{
    struct node *new_node= new node();
    struct node *nodeptr,*parentptr;
    new_node->data=n;
    new_node->left=NULL;
    new_node->right=NULL;
    if(tree==NULL)
    tree=new_node;
    else
    {
        parentptr=NULL;
        nodeptr=tree;
        while(nodeptr!=NULL)
        {
            parentptr=nodeptr;
            if(n<nodeptr->data)
            nodeptr=nodeptr->left;
            else
            nodeptr=nodeptr->right;
        }
        if(n<parentptr->data)
        parentptr->left=new_node;
        else
        parentptr->right=new_node;
    }
}

int add(struct node *tree)
{
    if(tree==NULL)
    return 0;
    return tree->data + add(tree->left) + add(tree->right);
    
}

int sumTree(struct node *tree)
{
    if(tree==NULL)
    return 1;
    if(tree->left==NULL && tree->right==NULL)
    return 1;
    else
    {
        int l=add(tree->left);
        int r=add(tree->right);
        int res=l+r;
        if(res==tree->data)
        {
            if(tree->left && tree->right)
            return 1;
        }
        return 0;
    }
}


int main()
{
    int t,n;
    cin>>t;
    while(t--)
    {
        cin>>n;
        insert(n);
    }
    cout<<add(tree)<<endl;
    if(sumTree(tree))
    cout<<"YES"<<endl;
    else
    cout<<"NO"<<endl;
    
	return 0;
}
